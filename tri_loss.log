	Step 10/Ep 1, 1.18s, prec 4.69%, sm 2.34%, d_ap 13.4113, d_an 11.9688, loss 1.7482
	Step 20/Ep 1, 1.18s, prec 14.84%, sm 8.59%, d_ap 11.3496, d_an 10.4561, loss 1.2697
Ep 1, 29.49s, prec 10.93%, sm 6.79%, d_ap 12.8785, d_an 11.5026, loss 1.7312
	Step 10/Ep 2, 1.25s, prec 31.25%, sm 21.88%, d_ap 8.0597, d_an 7.6715, loss 0.9268
	Step 20/Ep 2, 1.23s, prec 35.94%, sm 19.53%, d_ap 6.1856, d_an 5.9411, loss 0.6099
Ep 2, 29.27s, prec 34.56%, sm 21.91%, d_ap 7.5582, d_an 7.2271, loss 0.7546
	Step 10/Ep 3, 1.22s, prec 44.53%, sm 26.56%, d_ap 4.6711, d_an 4.6086, loss 0.4586
	Step 20/Ep 3, 1.22s, prec 64.84%, sm 46.09%, d_ap 3.8983, d_an 4.2156, loss 0.2423
Ep 3, 29.17s, prec 51.36%, sm 30.93%, d_ap 4.4991, d_an 4.5444, loss 0.4069
	Step 10/Ep 4, 1.23s, prec 56.25%, sm 28.12%, d_ap 3.5593, d_an 3.6419, loss 0.3441
	Step 20/Ep 4, 1.21s, prec 69.53%, sm 50.78%, d_ap 3.7285, d_an 3.9784, loss 0.2801
Ep 4, 29.04s, prec 65.89%, sm 41.08%, d_ap 3.6452, d_an 3.8455, loss 0.2653
	Step 10/Ep 5, 1.22s, prec 70.31%, sm 36.72%, d_ap 3.5771, d_an 3.7490, loss 0.2284
	Step 20/Ep 5, 1.22s, prec 68.75%, sm 40.62%, d_ap 3.4748, d_an 3.6835, loss 0.2406
Ep 5, 29.06s, prec 72.59%, sm 51.42%, d_ap 3.5622, d_an 3.8768, loss 0.2149

=========> Test on validation set <=========

User Warning: Version 0.18.1 is required for package scikit-learn, your current version is 0.19.0. As a result, the mAP score may not be totally correct. You can try `pip uninstall scikit-learn` and then `pip install scikit-learn==0.18.1`
Single Query:                 [mAP: 82.66%], [cmc1: 89.98%], [cmc5: 98.29%], [cmc10: 99.02%]

	Step 10/Ep 6, 1.23s, prec 78.91%, sm 57.81%, d_ap 3.5230, d_an 3.8717, loss 0.2056
	Step 20/Ep 6, 1.22s, prec 82.03%, sm 59.38%, d_ap 3.6180, d_an 4.0275, loss 0.1275
^CTraceback (most recent call last):
  File "script/experiment/train.py", line 586, in <module>
    main()
  File "script/experiment/train.py", line 487, in main
    optimizer.step()
  File "/home/kai/anaconda3/lib/python3.6/site-packages/torch/optim/adam.py", line 72, in step
    denom = exp_avg_sq.sqrt().add_(group['eps'])